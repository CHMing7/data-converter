apply from: 'dependency.gradle'

buildscript {
    repositories {
        maven { url = "https://maven.aliyun.com/nexus/content/repositories/jcenter" }
        maven { url = "https://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    dependencies {
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.18.0'
    }
}


allprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.vanniktech.maven.publish'

    group = GROUP
    version = VERSION_NAME

    repositories {
        maven { url = "https://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        annotationProcessor(libs.auto_service)
    }


    plugins.withId("com.vanniktech.maven.publish") {
        group = project.group
        version = project.version

        mavenPublish {
            sonatypeHost = "S01"
        }

        mavenPublishing {

            signAllPublications()

            pom {
                name = project.name
            }

            pomFromGradleProperties()
        }
    }

    javadoc {
        options.encoding = "UTF-8"
        failOnError = false
    }

    test {
        useJUnitPlatform()
        testLogging {
            // Show that tests are run in the command-line output
            events 'started', 'passed'
        }
    }

    tasks.withType(Copy) {
        filesMatching("**/*.proto") {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE
        }
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    publishing {
        repositories {
            // 本地maven仓库
            maven { url uri('F:\\repo') }
        }
    }
}


